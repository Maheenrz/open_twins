"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9784],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[d]="string"==typeof e?e:i,l[1]=r;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),i=n(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(o.tabItem,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(7462),i=n(7294),o=n(6010),l=n(2389),r=n(7392),s=n(7094),p=n(2466);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function d(e){const{lazy:t,block:n,defaultValue:l,values:d,groupId:c,className:m}=e,h=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=d??h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),g=(0,r.l)(f,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===l?l:l??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==k&&!f.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:b}=(0,s.U)(),[v,w]=(0,i.useState)(k),N=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=c){const e=y[c];null!=e&&e!==v&&f.some((t=>t.value===e))&&w(e)}const O=e=>{const t=e.currentTarget,n=N.indexOf(t),a=f[n].value;a!==v&&(T(t),w(a),null!=c&&b(c,String(a)))},I=e=>{let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const n=N.indexOf(e.currentTarget)+1;t=N[n]??N[0];break}case"ArrowLeft":{const n=N.indexOf(e.currentTarget)-1;t=N[n]??N[N.length-1];break}}t?.focus()};return i.createElement("div",{className:(0,o.Z)("tabs-container",u.tabList)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},m)},f.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>N.push(e),onKeyDown:I,onClick:O},l,{className:(0,o.Z)("tabs__item",u.tabItem,l?.className,{"tabs__item--active":v===t})}),n??t)}))),t?(0,i.cloneElement)(h.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function c(e){const t=(0,l.Z)();return i.createElement(d,(0,a.Z)({key:String(t)},e))}},9737:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var a=n(7462),i=(n(7294),n(3905)),o=n(5488),l=n(5162);const r={sidebar_position:2},s="Composition (recommended)",p={unversionedId:"installation/manual/composition",id:"installation/manual/composition",title:"Composition (recommended)",description:"Prerequisites",source:"@site/docs/installation/manual/composition.md",sourceDirName:"installation/manual",slug:"/installation/manual/composition",permalink:"/opentwins/docs/installation/manual/composition",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/installation/manual/composition.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"DT definition and monitoring (required)",permalink:"/opentwins/docs/installation/manual/essential"},next:{title:"Machine Learning",permalink:"/opentwins/docs/installation/manual/machine-learning"}},u={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Deploy",id:"deploy",level:2},{value:"Extended API for Eclipse Ditto",id:"extended-api-for-eclipse-ditto",level:3},{value:"OpenTwins app plugin for Grafana",id:"opentwins-app-plugin-for-grafana",level:3},{value:"Connect",id:"connect",level:2},{value:"Obtain external URLs",id:"obtain-external-urls",level:3},{value:"Configure OpenTwins plugin",id:"configure-opentwins-plugin",level:3}],c={toc:d},m="wrapper";function h(e){let{components:t,...r}=e;return(0,i.kt)(m,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"composition-recommended"},"Composition (recommended)"),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"Before you begin, ensure you have the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Container manager: Currently tested on ",(0,i.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker")," and ",(0,i.kt)("a",{parentName:"li",href:"https://containerd.io/"},"ContainerD"),"."),(0,i.kt)("li",{parentName:"ul"},"Access to a ",(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/releases/download/"},"Kubernetes")," (recommended) or ",(0,i.kt)("a",{parentName:"li",href:"https://k3s.io/"},"K3s")," cluster."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"kubectl")," installed and configured.")),(0,i.kt)("h2",{id:"deploy"},"Deploy"),(0,i.kt)("p",null,"To provide OpenTwins with digital twin composition capabilities it is necessary to add two components. You can check ",(0,i.kt)("a",{parentName:"p",href:"/opentwins/docs/overview/architecture#compositional-support"},"architecture")," to know what is the functionality of each one and how it connects with the rest of the elements."),(0,i.kt)("h3",{id:"extended-api-for-eclipse-ditto"},"Extended API for Eclipse Ditto"),(0,i.kt)("p",null,"This component, developed in NodeJS, has its code available in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ertis-research/extended-api-for-eclipse-ditto"},"its repository"),". It has been containerized with Docker and published in ",(0,i.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/ertis/ditto-extended-api"},"DockerHub"),"."),(0,i.kt)("p",null,"To install it in a Kubernetes cluster we will use a deployment and a service, but it will be necessary to previously modify the environment variables containing the Eclipse Ditto IP and its credentials. In addition, to enable the query of all policies, it must also be configured with the IP of the MongoDB instance used by Eclipse Ditto."),(0,i.kt)("p",null,"These are the environment variables of the component:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"HOST")),(0,i.kt)("td",{parentName:"tr",align:null},"IP"),(0,i.kt)("td",{parentName:"tr",align:null},"Host where the API will be deployed (default: localhost)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"PORT")),(0,i.kt)("td",{parentName:"tr",align:null},"int"),(0,i.kt)("td",{parentName:"tr",align:null},"Port to serve as endpoint for the API (default: 8080)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"MONGO_URI_POLICIES")),(0,i.kt)("td",{parentName:"tr",align:null},"URI"),(0,i.kt)("td",{parentName:"tr",align:null},"MongoDB URI to extract the policies. It must follow the format: ",(0,i.kt)("em",{parentName:"td"},"mongodb://IP_MONGODB:PORT_MONGODB/policies"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"DITTO_URI_THINGS")),(0,i.kt)("td",{parentName:"tr",align:null},"URI"),(0,i.kt)("td",{parentName:"tr",align:null},"Eclipse Ditto ",(0,i.kt)("strong",{parentName:"td"},"nginx")," service URI to provide functionality and apply constraints for composition. It must follow the format: ",(0,i.kt)("em",{parentName:"td"},"http://IP_DITTO:PORT_DITTO"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"DITTO_USERNAME_API")),(0,i.kt)("td",{parentName:"tr",align:null},"text"),(0,i.kt)("td",{parentName:"tr",align:null},"Eclipse Ditto API user")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"DITTO_PASSWORD_API")),(0,i.kt)("td",{parentName:"tr",align:null},"text"),(0,i.kt)("td",{parentName:"tr",align:null},"Eclipse Ditto API password")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"DITTO_USERNAME_DEVOPS")),(0,i.kt)("td",{parentName:"tr",align:null},"text"),(0,i.kt)("td",{parentName:"tr",align:null},"Eclipse Ditto Devops user (user who can create connections)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"DITTO_PASSWORD_DEVOPS")),(0,i.kt)("td",{parentName:"tr",align:null},"text"),(0,i.kt)("td",{parentName:"tr",align:null},"Eclipse Ditto Devops password")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"ALL_LOGS")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},"If enabled, the component logs will show the results of all requests it sends to Eclipse Ditto. It is only useful if you need to debug (default: false)")))),(0,i.kt)("p",null,"It is ",(0,i.kt)("strong",{parentName:"p"},"necessary to set up all the ones that start with DITTO"),", although it is highly recommended to set up the MONGO_URI_POLICIES one as well."),(0,i.kt)("p",null,"With this information, we will create a YAML file for a deployment and a YAML file for a service. All values, including those for credentials, correspond to the default values of Eclipse Ditto for the version indicated in the ",(0,i.kt)("a",{parentName:"p",href:"/opentwins/docs/installation/manual/essential#eclipse-ditto-v33"},"essential")," part. If you have changed the default values, you may need to modify these. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="deployment.yaml"',title:'"deployment.yaml"'},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: opentwins-ditto-extended-api\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: opentwins-ditto-extended-api\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: opentwins-ditto-extended-api\n    spec:\n      containers:\n      - name: ditto-extended-api\n        image: ertis/ditto-extended-api:latest\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        env: \n        - name: HOST \n          value: "localhost" \n        - name: PORT \n          value: "8080" \n        - name: MONGO_URI_POLICIES \n          value: "mongodb://mongodb:27017/policies" \n        - name: DITTO_URI_THINGS \n          value: "http://ditto-nginx:30525" \n        - name: DITTO_USERNAME_API \n          value: "ditto" \n        - name: DITTO_PASSWORD_API \n          value: "ditto" \n        - name: DITTO_USERNAME_DEVOPS \n          value: "devops" \n        - name: DITTO_PASSWORD_DEVOPS \n          value: "foobar"\n        - name: ALL_LOGS \n          value: false\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="service.yaml"',title:'"service.yaml"'},"apiVersion: v1\nkind: Service\nmetadata:\n  name: opentwins-ditto-extended-api\n  labels:\n    app.kubernetes.io/name: opentwins-ditto-extended-api\nspec:\n  type: NodePort\n  ports:\n  - name: http\n    nodePort: 30526\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app.kubernetes.io/name: opentwins-ditto-extended-api\n")),(0,i.kt)("p",null,"To deploy them in the Kubernetes cluster we will use the commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f deployment.yaml -n opentwins\nkubectl apply -f service.yaml -n opentwins\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Verify that the component is running correctly")," by querying the pod status, which should be Running and Ready 1/1. "),(0,i.kt)("h3",{id:"opentwins-app-plugin-for-grafana"},"OpenTwins app plugin for Grafana"),(0,i.kt)("p",null,"The code of this plugin can be found in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ertis-research/grafana-app-opentwins"},"his repository")," and the latest version of the plugin will always be compiled in a zip file as a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ertis-research/grafana-app-opentwins/releases/tag/latest"},"release"),"."),(0,i.kt)("p",null,"The installation of the OpenTwins plugin in Grafana will depend on how Grafana was installed and the version you are using. Below, we explain the process for installations done via Helm and for local installations. However, it is highly recommended to check the ",(0,i.kt)("a",{parentName:"p",href:"https://grafana.com/docs/grafana/latest/administration/plugin-management/#install-grafana-plugins"},"official Grafana documentation")," for detailed instructions on plugin installation, as there may be specific variations depending on your environment or version."),(0,i.kt)(o.Z,{groupId:"environment",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"helm",label:"Helm",default:!0,mdxType:"TabItem"},(0,i.kt)("p",null,"To install the plugin you need to add its compiled code in a folder with the same name as its ID inside the Grafana plugins folder, which is ",(0,i.kt)("em",{parentName:"p"},"/var/lib/grafana/plugins")," by default.\nTo do this using Helm, add an extraInitContainer to your values.yaml, where you navigate to the plugins folder, download the zip of the latest release and unzip it.\nBelow is what you need to add."),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Note that some keys may overlap with other keys you already have in your values.yaml, ",(0,i.kt)("strong",{parentName:"p"},"do not just copy it but mix both YAMLs"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=values.yaml",title:"values.yaml"},"extraInitContainers:\n- name: install-opentwins-plugins\n  image: busybox\n  command:\n    - /bin/sh\n    - -c\n    - |\n      #!/bin/sh\n      set -euo pipefail\n      mkdir -p /grafana-storage/plugins\n      cd /grafana-storage/plugins\n      wget --no-check-certificate -O ertis-opentwins.zip https://github.com/ertis-research/opentwins-in-grafana/releases/download/latest/ertis-opentwins.zip\n      unzip -o ertis-opentwins.zip\n      rm ertis-opentwins.zip\n  volumeMounts:\n  - name: storage\n    mountPath: /grafana-storage\n")),(0,i.kt)("p",null,"At the moment the plugin is not signed, so you will have to add the plugin id (",(0,i.kt)("em",{parentName:"p"},"ertis-opentwins"),") to the list of unsigned plugins, which is also defined inside the values.yaml. This will allow Grafana to show it as an installable plugin (if not, it will not appear at all). Below is what you need to add (note that if you have followed the manual installation of the ",(0,i.kt)("a",{parentName:"p",href:"/opentwins/docs/installation/manual/essential#grafana-v95"},"essential functionality")," you should already have it configured.)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=values.yaml",title:"values.yaml"},"grafana.ini:\n  plugins:\n    allow_loading_unsigned_plugins: ertis-opentwins,ertis-unity-panel\n")),(0,i.kt)("p",null,"Now update the Grafana helm: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"helm upgrade grafana grafana/grafana -n opentwins --version 8.5.0 -f values.yaml\n")),(0,i.kt)("p",null,"Verify that the Grafana pod is in Running and Ready status. The OpenTwins plugin should now be available for enabling in the Grafana configuration.")),(0,i.kt)(l.Z,{value:"local",label:"Local",mdxType:"TabItem"},(0,i.kt)("p",null,"To install the plugin on a local Grafana, you must first ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ertis-research/grafana-app-opentwins/releases/download/latest/ertis-opentwins.zip"},"download the zip file")," of the latest plugin release and then access the Grafana folder on your PC. "),(0,i.kt)("p",null,"In this folder you have to find the ",(0,i.kt)("a",{parentName:"p",href:"https://grafana.com/docs/grafana/v11.3/setup-grafana/configure-grafana"},"Grafana configuration file"),". Follow the ",(0,i.kt)("a",{parentName:"p",href:"https://grafana.com/docs/grafana/v11.3/setup-grafana/configure-grafana/#configuration-file-location"},"Grafana documentation")," to know its location, the name of the file and how to modify it. When you have it, modify the appropriate file by uncommenting and adding the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[plugins]\n# Enter a comma-separated list of plugin identifiers to identify plugins to load even if they are unsigned. Plugins with modified signatures are never loaded.\nallow_loading_unsigned_plugins = ertis-opentwins\n")),(0,i.kt)("p",null,"In the same file, check the ",(0,i.kt)("a",{parentName:"p",href:"https://grafana.com/docs/grafana/v11.3/setup-grafana/configure-grafana/#plugins"},"path to the plugins folder"),'. You can modify it if you consider it convenient. Then, go to that folder and unzip the plugin zip file. You should get a folder with the name "ertis-opentwins" which must have something like this inside (make sure that there are no intermediate folders).'),(0,i.kt)("center",null,(0,i.kt)("img",{src:n(3098).Z,alt:"Kubectl get services",style:{width:700}})),(0,i.kt)("p",null,"For the changes to take effect, ",(0,i.kt)("strong",{parentName:"p"},"Grafana must be restarted"),". Please refer to ",(0,i.kt)("a",{parentName:"p",href:"https://grafana.com/docs/grafana/v11.3/setup-grafana/start-restart-grafana/"},"its documentation")," to find out how to do this depending on your operating system. The OpenTwins plugin should now be available for enabling in the Grafana configuration."))),(0,i.kt)("h2",{id:"connect"},"Connect"),(0,i.kt)("p",null,"Now you have to ",(0,i.kt)("strong",{parentName:"p"},"configure the OpenTwins plugin")," in Grafana with the Ditto Extended API and Eclipse Ditto URLs."),(0,i.kt)("h3",{id:"obtain-external-urls"},"Obtain external URLs"),(0,i.kt)("p",null,"Get the name of the services with ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl get services"),". The method to obtain the URL may vary depending on the configuration of your cluster. The URL for each service will match the cluster IP and the port that will depend on the ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types"},"type of service")," (LoadBalancer or NodePort). For example, if our cluster IP is ",(0,i.kt)("inlineCode",{parentName:"p"},"192.168.32.25")," and uses a NodePort service with the port 30718, the URL for Grafana would be ",(0,i.kt)("inlineCode",{parentName:"p"},"192.168.32.25:30718"),"."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Are you using ",(0,i.kt)("b",null,"Minikube")," to deploy OpenTwins?"),(0,i.kt)("div",null,(0,i.kt)("p",null,"As Minikube is a local cluster, you ",(0,i.kt)("strong",{parentName:"p"},"cannot directly use the IP of the cluster"),". Therefore, you will have to ",(0,i.kt)("a",{parentName:"p",href:"https://minikube.sigs.k8s.io/docs/handbook/accessing/"},"expose the services")," that you want to use externally with a command."),(0,i.kt)("p",null,"Open three terminals, one for each service, and run the following command on each terminal with a different service name. These will return a URL of your localhost with a port that will forward all traffic to the specified service. ",(0,i.kt)("strong",{parentName:"p"},"These are the URLs you should use.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"minikube service <service-name> --url\n")))),(0,i.kt)("h3",{id:"configure-opentwins-plugin"},"Configure OpenTwins plugin"),(0,i.kt)("p",null,"Access Grafana in any browser with the URL you have obtained. The credentials must match those indicated in the Helm values, which by default are user ",(0,i.kt)("em",{parentName:"p"},"admin")," and password ",(0,i.kt)("em",{parentName:"p"},"admin"),". "),(0,i.kt)("p",null,"Access the left drop-down menu and select ",(0,i.kt)("inlineCode",{parentName:"p"},"Administration > Plugins"),". Once there, find the ",(0,i.kt)("em",{parentName:"p"},"OpenTwins")," plugin and activate it by clicking ",(0,i.kt)("em",{parentName:"p"},"Enable"),". Then, go to the ",(0,i.kt)("em",{parentName:"p"},"Configuration")," tab where you will need to enter the Eclipse Ditto and Extended API URLs in the corresponding fields. Use ",(0,i.kt)("em",{parentName:"p"},"ditto")," for both the Eclipse Ditto username and password if you have not changed the credentials. Then click on ",(0,i.kt)("em",{parentName:"p"},"Save settings")," to complete the plugin configuration."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Screenshots"),(0,i.kt)("div",null,(0,i.kt)("center",null,(0,i.kt)("img",{src:n(6482).Z,alt:"Plugin",style:{width:600}})),(0,i.kt)("center",null,(0,i.kt)("img",{src:n(3508).Z,alt:"Configuration",style:{width:600}})),(0,i.kt)("center",null,(0,i.kt)("img",{src:n(8407).Z,alt:"Configuration",style:{width:400}})))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"If you are using the latest version of the interface, you may find two fields intended for an agent service. This functionality is currently under development and is not yet available, so leave them empty and disregard them for now.")),(0,i.kt)("p",null,"Find the available application in the ",(0,i.kt)("inlineCode",{parentName:"p"},"App > OpenTwins")," section of the left drop-down menu. "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"You have now support for the composition of digital twins.")))}h.isMDXComponent=!0},3508:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/configuration-interfaz-c20eaffea1d3bec206f55464ba19679a.png"},6482:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/enable-plugin-0aa4a65c98ecbff05f27d2b540455e1b.png"},8407:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/opentwins-access-2eb74b7ab18c9e4a88906e0a9a5a13fd.png"},3098:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/opentwins-plugin-content-0ab721e980fb07462f0ea875e004ac60.png"}}]);