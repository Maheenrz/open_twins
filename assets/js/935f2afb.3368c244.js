"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Quickstart","href":"/opentwins/docs/quickstart","docId":"quickstart"},{"type":"category","label":"Overview","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Purpose","href":"/opentwins/docs/overview/purpose","docId":"overview/purpose"},{"type":"link","label":"Concepts","href":"/opentwins/docs/overview/concepts","docId":"overview/concepts"},{"type":"link","label":"Architecture","href":"/opentwins/docs/overview/architecture","docId":"overview/architecture"}],"href":"/opentwins/docs/category/overview"},{"type":"category","label":"Installation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Helm","href":"/opentwins/docs/installation/using-helm","docId":"installation/using-helm"},{"type":"category","label":"Manual","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"DT definition and monitoring (required)","href":"/opentwins/docs/installation/manual/essential","docId":"installation/manual/essential"},{"type":"link","label":"Composition (recommended)","href":"/opentwins/docs/installation/manual/composition","docId":"installation/manual/composition"},{"type":"link","label":"Machine Learning","href":"/opentwins/docs/installation/manual/machine-learning","docId":"installation/manual/machine-learning"},{"type":"link","label":"Simulations","href":"/opentwins/docs/installation/manual/simulations","docId":"installation/manual/simulations"},{"type":"link","label":"3D representation","href":"/opentwins/docs/installation/manual/unity","docId":"installation/manual/unity"}],"href":"/opentwins/docs/installation/manual/"}],"href":"/opentwins/docs/category/installation"},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"DT definition","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a type","href":"/opentwins/docs/guides/definition/type-creation","docId":"guides/definition/type-creation"},{"type":"link","label":"Create a digital twin","href":"/opentwins/docs/guides/definition/dt-schema-creation","docId":"guides/definition/dt-schema-creation"}],"href":"/opentwins/docs/category/dt-definition"},{"type":"category","label":"Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"String and number","href":"/opentwins/docs/guides/examples/string-example","docId":"guides/examples/string-example"},{"type":"category","label":"Raspberry Pi","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Raspberry","href":"/opentwins/docs/guides/examples/raspberry-example/","docId":"guides/examples/raspberry-example/raspberry-example"},{"type":"link","label":"Sending data to Ditto","href":"/opentwins/docs/guides/examples/raspberry-example/sending-data","docId":"guides/examples/raspberry-example/sending-data"}],"href":"/opentwins/docs/category/raspberry-pi"},{"type":"link","label":"Bouncing ball","href":"/opentwins/docs/guides/examples/ball-example","docId":"guides/examples/ball-example"}],"href":"/opentwins/docs/category/examples"},{"type":"category","label":"FMI Simulation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Concepts","href":"/opentwins/docs/guides/fmi/concepts","docId":"guides/fmi/concepts"},{"type":"link","label":"API Documentation","href":"/opentwins/docs/guides/fmi/API","docId":"guides/fmi/API"}],"href":"/opentwins/docs/category/fmi-simulation"},{"type":"category","label":"Unity visualization","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creation of Unity WebGL build","href":"/opentwins/docs/guides/unity/creating-unity-build","docId":"guides/unity/creating-unity-build"},{"type":"link","label":"Using Grafana Unity Plugin","href":"/opentwins/docs/guides/unity/using-grafana-plugin","docId":"guides/unity/using-grafana-plugin"}],"href":"/opentwins/docs/category/unity-visualization"}],"href":"/opentwins/docs/guides/"}]},"docs":{"guides/definition/dt-schema-creation":{"id":"guides/definition/dt-schema-creation","title":"Create a digital twin","description":"The way to interact with Eclipse Ditto and therefore create not only digital twins, but connections, etc. is through http requests and methods.","sidebar":"tutorialSidebar"},"guides/definition/type-creation":{"id":"guides/definition/type-creation","title":"Create a type","description":"The way to interact with Eclipse Ditto and therefore create not only digital twins, but connections, etc. is through http requests and methods.","sidebar":"tutorialSidebar"},"guides/examples/ball-example":{"id":"guides/examples/ball-example","title":"Bouncing ball","description":"","sidebar":"tutorialSidebar"},"guides/examples/raspberry-example/raspberry-example":{"id":"guides/examples/raspberry-example/raspberry-example","title":"Raspberry","description":"Requirements","sidebar":"tutorialSidebar"},"guides/examples/raspberry-example/sending-data":{"id":"guides/examples/raspberry-example/sending-data","title":"Sending data to Ditto","description":"In this case we will use a Raspberry Pi 3B with Raspbian buster OS connected to a DHT22 temperature and humidity sensor.","sidebar":"tutorialSidebar"},"guides/examples/string-example":{"id":"guides/examples/string-example","title":"String and number","description":"This is a example of creating a ONE way digital twin for monitoring a production line where we want to send the consumption and status of each of the components of the system. In this case, the stored information will be a string and a number, both of them have a timestamp asociated.","sidebar":"tutorialSidebar"},"guides/fmi/API":{"id":"guides/fmi/API","title":"API Documentation","description":"Welcome to the Example API documentation. This API allows developers to interact with our services easily and efficiently.","sidebar":"tutorialSidebar"},"guides/fmi/concepts":{"id":"guides/fmi/concepts","title":"FMI Simulation concepts","description":"The FMI simulation service is currently being tested.","sidebar":"tutorialSidebar"},"guides/index":{"id":"guides/index","title":"Guides","description":"The guides is being written right now. Sorry for the inconvenience.","sidebar":"tutorialSidebar"},"guides/unity/creating-unity-build":{"id":"guides/unity/creating-unity-build","title":"Creation of Unity WebGL build","description":"Basic creation of Unity build","sidebar":"tutorialSidebar"},"guides/unity/using-grafana-plugin":{"id":"guides/unity/using-grafana-plugin","title":"Using Grafana Unity Plugin","description":"Basic creation of Unity build","sidebar":"tutorialSidebar"},"installation/manual/composition":{"id":"installation/manual/composition","title":"Composition (recommended)","description":"Prerequisites","sidebar":"tutorialSidebar"},"installation/manual/essential":{"id":"installation/manual/essential","title":"DT definition and monitoring (required)","description":"This component is the essential functionality of OpenTwins and is required for the system to function properly. Regardless of your specific use case or configuration, it must be installed as a prerequisite. Please ensure that this component is installed correctly before proceeding with the configuration.","sidebar":"tutorialSidebar"},"installation/manual/index":{"id":"installation/manual/index","title":"Manual","description":"The documentation of this method is being written right now. We recommend using helm installation.","sidebar":"tutorialSidebar"},"installation/manual/machine-learning":{"id":"installation/manual/machine-learning","title":"Machine Learning","description":"Prerequisites","sidebar":"tutorialSidebar"},"installation/manual/simulations":{"id":"installation/manual/simulations","title":"Simulations","description":"FMI simulations","sidebar":"tutorialSidebar"},"installation/manual/unity":{"id":"installation/manual/unity","title":"3D representation","description":"Prerequisites","sidebar":"tutorialSidebar"},"installation/using-helm":{"id":"installation/using-helm","title":"Helm","description":"Standard version","sidebar":"tutorialSidebar"},"overview/architecture":{"id":"overview/architecture","title":"Architecture","description":"OpenTwins is built on a open source microservices architecture, designed to enhance scalability, flexibility and efficiency in the development, extension, deployment and maintenance of the platform. All the components that make up this architecture are encapsulated in Docker containers, ideally managed through Kubernetes, which ensures efficient portability and management.","sidebar":"tutorialSidebar"},"overview/concepts":{"id":"overview/concepts","title":"Concepts","description":"In this section, we will explore in depth the concept of a digital twin as defined by the platform. We will detail the information it can contain, explain the idea of a \\"digital twin type\\", and discuss how the composition works.","sidebar":"tutorialSidebar"},"overview/purpose":{"id":"overview/purpose","title":"Purpose","description":"This platform has been designed to facilitate the development of digital twins and is characterised by the exclusive use of open source components. The aim is to achieve a platform that covers all the functionalities that a digital twin may require, from the most basic ones, such as simply checking its real-time state, to more advanced ones, such as the inclusion of predicted or simulated data or visualisation of 3D models of the twins.","sidebar":"tutorialSidebar"},"quickstart":{"id":"quickstart","title":"Quickstart","description":"Welcome to OpenTwins, a flexible platform adapted to your needs! Although OpenTwins offers extensive customization options, we understand the importance of simplicity for beginners. Therefore, let\'s embark on a short journey together, showing you the quickest route to deploy the platform and develop a functional digital twin.","sidebar":"tutorialSidebar"}}}')}}]);